"""inicializar base?

Revision ID: bc23659812dd
Revises: 
Create Date: 2025-07-10 14:20:37.112780

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bc23659812dd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asociaciones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=True),
    sa.Column('ciudad', sa.String(), nullable=True),
    sa.Column('pais', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categorias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=True),
    sa.Column('edad_minima', sa.Integer(), nullable=True),
    sa.Column('edad_maxima', sa.Integer(), nullable=True),
    sa.Column('genero', sa.String(), nullable=True),
    sa.Column('sets_por_partido', sa.Integer(), nullable=True),
    sa.Column('puntos_por_set', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('torneos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=True),
    sa.Column('fecha_inscripcion_i', sa.Date(), nullable=True),
    sa.Column('fecha_inscripcion_f', sa.Date(), nullable=True),
    sa.Column('fecha_competencia_i', sa.Date(), nullable=True),
    sa.Column('fecha_competencia_f', sa.Date(), nullable=True),
    sa.Column('mesas_disponibles', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grupos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=True),
    sa.Column('categoria_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jugadores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=True),
    sa.Column('fecha_nac', sa.Date(), nullable=True),
    sa.Column('genero', sa.String(), nullable=True),
    sa.Column('ciudad', sa.String(), nullable=True),
    sa.Column('pais', sa.String(), nullable=True),
    sa.Column('asociacion_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['asociacion_id'], ['asociaciones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipos_dobles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jugador1_id', sa.Integer(), nullable=True),
    sa.Column('jugador2_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['jugador1_id'], ['jugadores.id'], ),
    sa.ForeignKeyConstraint(['jugador2_id'], ['jugadores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participaciones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jugador_id', sa.Integer(), nullable=True),
    sa.Column('equipo_id', sa.Integer(), nullable=True),
    sa.Column('categoria_id', sa.Integer(), nullable=True),
    sa.Column('torneo_id', sa.Integer(), nullable=True),
    sa.Column('grupo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], ),
    sa.ForeignKeyConstraint(['equipo_id'], ['equipos_dobles.id'], ),
    sa.ForeignKeyConstraint(['grupo_id'], ['grupos.id'], ),
    sa.ForeignKeyConstraint(['jugador_id'], ['jugadores.id'], ),
    sa.ForeignKeyConstraint(['torneo_id'], ['torneos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('partidos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo_partido', sa.String(), nullable=True),
    sa.Column('horario_inicio', sa.DateTime(), nullable=True),
    sa.Column('mesa_asignada', sa.Integer(), nullable=True),
    sa.Column('fase', sa.String(), nullable=True),
    sa.Column('ronda_eliminacion', sa.String(), nullable=True),
    sa.Column('ganador_id', sa.Integer(), nullable=True),
    sa.Column('perdedor_id', sa.Integer(), nullable=True),
    sa.Column('is_bye', sa.Boolean(), nullable=True),
    sa.Column('torneo_id', sa.Integer(), nullable=True),
    sa.Column('categoria_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], ),
    sa.ForeignKeyConstraint(['ganador_id'], ['participaciones.id'], ),
    sa.ForeignKeyConstraint(['perdedor_id'], ['participaciones.id'], ),
    sa.ForeignKeyConstraint(['torneo_id'], ['torneos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participantes_partido',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rol', sa.String(), nullable=True),
    sa.Column('participacion_id', sa.Integer(), nullable=True),
    sa.Column('partido_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['participacion_id'], ['participaciones.id'], ),
    sa.ForeignKeyConstraint(['partido_id'], ['partidos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resultados_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_set', sa.Integer(), nullable=True),
    sa.Column('puntos_jugador1', sa.Integer(), nullable=True),
    sa.Column('puntos_jugador2', sa.Integer(), nullable=True),
    sa.Column('partido_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['partido_id'], ['partidos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resultados_sets')
    op.drop_table('participantes_partido')
    op.drop_table('partidos')
    op.drop_table('participaciones')
    op.drop_table('equipos_dobles')
    op.drop_table('jugadores')
    op.drop_table('grupos')
    op.drop_table('torneos')
    op.drop_table('categorias')
    op.drop_table('asociaciones')
    # ### end Alembic commands ###
